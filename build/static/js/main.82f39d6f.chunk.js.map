{"version":3,"sources":["components/navBar.jsx","services/logService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","utils/paginate.jsx","components/common/like.jsx","components/common/tableHead.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/searchForm.jsx","services/authService.js","components/moviesTable.jsx","components/common/listGroup.jsx","components/movieList.jsx","components/rentals.jsx","components/customers.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","user","className","to","id","Fragment","name","init","Raven","config","install","log","message","captureException","axios","defaults","baseURL","process","interceptors","response","use","error","status","toast","logger","Promise","reject","getMovies","a","get","data","deleteMovie","movieID","delete","getMovie","saveMovie","movie","_id","put","post","getGenres","Pagination","state","this","props","pageSize","totalItemNum","onPaginate","currentPage","numPages","Math","ceil","pages","_","range","aria-label","map","page","key","onClick","Component","paginate","items","slice","take","value","Like","onLiked","liked","TableHead","renderSortIcon","path","sortColumn","order","columns","column","label","onSort","scope","TableBody","item","content","Table","onDelete","handleDelete","SeacrForm","handleChange","e","preventDefault","searchQuery","target","toLowerCase","handleSearch","type","placeholder","onChange","email","password","jwt","localStorage","setItem","headers","common","getItem","logout","removeItem","login","getCurrentUser","jwtDecode","errors","loginWithJWT","MoviesTable","title","deleteColumn","auth","isAdmin","push","movies","paginatedMovies","length","ListGroup","categories","category","onCategorize","currentCategory","style","cursor","ListMovies","genres","currentGenre","movieId","original_movies","movies_left","filter","setState","moviesService","logService","movie1","handlePaginate","console","handleCategorize","category_name","find","handleSort","getData","categorized_movies","indexOf","sorted_movies","orderBy","genre","Rentals","Customers","NotFound","Input","htmlFor","fontSize","Select","options","option","Form","validate","result","Joi","schema","abortEarly","details","validateInput","errorMessage","handleSubmit","doSubmit","renderSelect","disabled","MovieForm","genreId","dailyRentalRate","numberInStock","movieName","rating","stock","string","allow","min","required","number","max","history","populateGenre","populateMovie","match","params","componentDidMount","onSubmit","renderInput","renderButton","LoginForm","username","from","location","window","register","RegisterForm","ProtectedRoute","Conponent","component","render","rest","pathname","Logout","App","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6RA+CeA,EA5CA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACE,yBAAKC,UAAU,iDACb,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,KAArC,WAIA,yBAAKD,UAAU,2BAA2BE,GAAG,aAC3C,wBAAIF,UAAU,cACZ,kBAAC,IAAD,CAASA,UAAU,qBAAqBC,GAAG,KAA3C,QAGA,kBAAC,IAAD,CAASD,UAAU,oBAAoBC,GAAG,cAA1C,aAGA,kBAAC,IAAD,CAASD,UAAU,oBAAoBC,GAAG,YAA1C,YAGEF,GACA,kBAAC,IAAMI,SAAP,KACE,kBAAC,IAAD,CAASH,UAAU,qBAAqBC,GAAG,aAA3C,YAGA,kBAAC,IAAD,CAASD,UAAU,oBAAoBC,GAAG,UAA1C,UAKHF,GACC,kBAAC,IAAMI,SAAP,KACE,kBAAC,IAAD,CAASH,UAAU,qBAAqBC,GAAG,YACxCF,EAAKK,MAER,kBAAC,IAAD,CAASJ,UAAU,oBAAoBC,GAAG,WAA1C,e,iFCxBC,OACbI,KAXF,WACEC,IAAMC,OACJ,6EACAC,WASFC,IANF,SAAaC,GACXJ,IAAMK,iBAAiBD,KCLzBE,IAAMC,SAASC,QAAUC,wCAEzBH,IAAMI,aAAaC,SAASC,IAAI,MAAM,SAACC,GAQrC,OANEA,EAAMF,UACNE,EAAMF,SAASG,QAAU,IAAMD,EAAMF,SAASG,OAAS,MAEvDC,IAAMF,MAAM,+BACZG,EAAOb,IAAIU,IAENI,QAAQC,OAAOL,MAGxB,IAyBe,GAAEM,UAzBF,uCAAG,8BAAAC,EAAA,sEACOd,IAAMe,IAAN,YADP,uBACRC,EADQ,EACRA,KADQ,kBAETA,GAFS,2CAAH,qDAyBaC,YApBX,uCAAG,WAAOC,GAAP,iBAAAJ,EAAA,sEACKd,IAAMmB,OAAN,kBAAwBD,IAD7B,uBACVF,EADU,EACVA,KADU,kBAEXA,GAFW,2CAAH,sDAoBwBI,SAf3B,uCAAG,WAAOF,GAAP,iBAAAJ,EAAA,sEACQd,IAAMe,IAAN,kBAAqBG,IAD7B,uBACPF,EADO,EACPA,KADO,kBAERA,GAFQ,2CAAH,sDAeqCK,UAVpC,uCAAG,WAAOL,GAAP,eAAAF,EAAA,gEACZQ,EADY,eACCN,IACJO,KACTP,EAAKO,IAHO,gCAIRvB,IAAMwB,IAAN,kBAAqBR,EAAKO,KAAOD,GAJzB,6CAMRtB,IAAMyB,KAAN,WAAuBH,GANf,2CAAH,uD,4CC5Bf,8BAAAR,EAAA,sEACyBd,IAAMe,IAAN,WADzB,uBACUC,EADV,EACUA,KADV,kBAESA,GAFT,4C,sBAFAhB,IAAMC,SAASC,QAAUC,wCAMVuB,M,4DCkCAC,E,4MArCbC,MAAQ,G,uDAEE,IAAD,EACqDC,KAAKC,MAAzDC,EADD,EACCA,SAAUC,EADX,EACWA,aAAcC,EADzB,EACyBA,WAAYC,EADrC,EACqCA,YACtCC,EAAWC,KAAKC,KAAKL,EAAeD,GAC1C,GAAiB,IAAbI,EACF,OAAO,KAET,IAAMG,EAAQC,IAAEC,MAAM,EAAGL,EAAW,GACpC,OACE,yBAAKM,aAAW,2BACd,wBAAIrD,UAAU,cACXkD,EAAMI,KAAI,SAACC,GAAD,OACT,wBACEC,IAAKD,EACLvD,UACE8C,IAAgBS,EAAO,mBAAqB,aAG9C,uBAAGE,QAAS,kBAAMZ,EAAWU,IAAOvD,UAAU,aAC3CuD,a,GArBQG,aCMVC,EARE,SAACC,EAAOL,EAAMZ,GAK7B,OAJqBQ,IAAES,GACpBC,OAAON,EAAO,GAAKZ,GACnBmB,KAAKnB,GACLoB,SCMUC,E,uKARX,OACE,yBAAKhE,UAAU,iBAAiByD,QAAShB,KAAKC,MAAMuB,SAClD,uBAAGjE,UAAWyC,KAAKC,MAAMwB,MAAQ,cAAgB,uB,GAJtCR,aCsCJS,E,4MArCbC,eAAiB,SAACC,GAChB,IAAMC,EAAU,eAAQ,EAAK5B,MAAM4B,YACnC,OAAIA,EAAWD,OAASA,EACM,QAArBC,EAAWC,MAChB,uBAAGvE,UAAU,mBAEb,uBAAGA,UAAU,oBAGR,M,uDAID,IAAD,OACP,OACE,+BACE,4BACGyC,KAAKC,MAAM8B,QAAQlB,KAAI,SAACmB,GAAD,OACtBA,EAAOC,MACL,wBACElB,IAAKiB,EAAOJ,KACZrE,UAAU,YACVyD,QAAS,kBAAM,EAAKf,MAAMiC,OAAOF,EAAOJ,OACxCO,MAAM,OAELH,EAAOC,MANV,IAMkB,EAAKN,eAAeK,EAAOJ,OAG7C,wBAAIb,IAAKiB,EAAOjB,e,GA7BNE,aCuBTmB,E,uKArBH,IAAD,OACP,OACE,+BACGpC,KAAKC,MAAMkB,MAAMN,KAAI,SAACwB,GAAD,OACpB,wBAAItB,IAAKsB,EAAK3C,KACX,EAAKO,MAAM8B,QAAQlB,KAAI,SAACmB,GAAD,OACtBA,EAAOM,QACL,4BAAKN,EAAOM,QAAQD,IAEpB,wBAAItB,IAAKL,IAAExB,IAAImD,EAAML,EAAOJ,OACzBlB,IAAExB,IAAImD,EAAML,EAAOJ,mB,GAXdX,aCqBTsB,E,uKAlBX,OACE,2BAAOhF,UAAU,sBACf,kBAAC,EAAD,CACEsE,WAAY7B,KAAKC,MAAM4B,WACvBE,QAAS/B,KAAKC,MAAM8B,QACpBG,OAAQlC,KAAKC,MAAMiC,SAErB,kBAAC,EAAD,CACEf,MAAOnB,KAAKC,MAAMkB,MAClBY,QAAS/B,KAAKC,MAAM8B,QACpBP,QAASxB,KAAKC,MAAMuB,QACpBgB,SAAUxC,KAAKC,MAAMwC,oB,GAbXxB,aCwBLyB,E,4MAzBb3C,MAAQ,G,EACR4C,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAIC,EACJA,EAAcF,EAAEG,OAAOzB,MAAM0B,cAC7B,EAAK/C,MAAMgD,aAAaH,I,uDAEhB,IACAxB,EAAUtB,KAAKC,MAAfqB,MACR,OACE,yBAAK/D,UAAU,mBACb,2BACEI,KAAK,SACLF,GAAG,SACHF,UAAU,eACV2F,KAAK,OACLC,YAAY,iBACZ7B,MAAOA,EACP8B,SAAUpD,KAAK2C,oB,GAnBD1B,a,6DCMjB,WAAqBoC,EAAOC,GAA5B,iBAAArE,EAAA,sEACuBd,IAAMyB,KAAN,QAAoB,CAC9CyD,QACAC,aAHG,gBACSC,EADT,EACGpE,KAIRqE,aAAaC,QAVE,QAUgBF,GAL1B,4C,sBAJPpF,IAAMC,SAASC,QAAUC,wCAEzBH,IAAMC,SAASsF,QAAQC,OAAO,gBAAkBH,aAAaI,QAH5C,SAiBV,IAcQ,GACbC,OAfoB,WACpBL,aAAaM,WAlBE,UAiCfC,MA5BK,SAAP,qCA6BEC,eAb4B,WAC5B,IACE,IAAMT,EAAMC,aAAaI,QAvBZ,SAyBb,OADaK,IAAUV,GAEvB,MAAOW,GACP,OAAO,OAQTC,aAtBK,SAAsBZ,GAC3BC,aAAaC,QAdE,QAcgBF,KCwElBa,E,kDAjDb,aAAe,IAAD,uBACZ,gBAjCFrC,QAAU,CACR,CACEH,KAAM,QACNK,MAAO,QACPK,QAAS,SAACD,GAAD,OACP,kBAAC,IAAD,CAAM7E,GAAE,6BAAwB6E,EAAK3C,MAArC,IAA8C2C,EAAKgC,SAGvD,CAAEzC,KAAM,aAAcK,MAAO,SAC7B,CAAEL,KAAM,gBAAiBK,MAAO,SAChC,CAAEL,KAAM,kBAAmBK,MAAO,UAElC,CACElB,IAAK,OACLuB,QAAS,SAACD,GAAD,OACP,kBAAC,EAAD,CAAMb,QAAS,kBAAM,EAAKvB,MAAMuB,QAAQa,IAAOZ,MAAOY,EAAKZ,WAiBnD,EAZd6C,aAAe,CACbvD,IAAK,SACLuB,QAAS,SAACD,GAAD,OACP,4BACErB,QAAS,kBAAM,EAAKf,MAAMwC,aAAaJ,EAAK3C,MAC5CnC,UAAU,kBAFZ,YASU,EAMd2E,OAAS,SAACN,GACR,IAAMC,EAAU,eAAQ,EAAK5B,MAAM4B,YAC/BA,EAAWD,OAASA,EACtBC,EAAWC,MAA6B,QAArBD,EAAWC,MAAkB,OAAS,MAEzDD,EAAWD,KAAOA,EAEpB,EAAK3B,MAAMiC,OAAOL,IAXlB,IAAMvE,EAAOiH,EAAKP,iBAFN,OAGR1G,GAAQA,EAAKkH,SAAS,EAAKzC,QAAQ0C,KAAK,EAAKH,cAHrC,E,qDAgBJ,IAAD,EASHtE,KAAKC,MAPPyE,EAFK,EAELA,OACAC,EAHK,EAGLA,gBACAnD,EAJK,EAILA,QACAiB,EALK,EAKLA,aACAZ,EANK,EAMLA,WACAoB,EAPK,EAOLA,aACAH,EARK,EAQLA,YAEF,OACE,yBAAKvF,UAAU,QACM,IAAlBmH,EAAOE,OACN,kBAAC,IAAMlH,SAAP,KACE,sCAAYgH,EAAOE,OAAnB,uBACA,kBAAC,EAAD,CAAWtD,MAAOwB,EAAaG,aAAcA,IAC7C,kBAAC,EAAD,CACE9B,MAAOwD,EACP5C,QAAS/B,KAAK+B,QACdF,WAAYA,EACZK,OAAQlC,KAAKkC,OACbV,QAASA,EACTiB,aAAcA,KAIlB,iE,GA3EgBxB,aCmBX4D,E,4MAvBb9E,MAAQ,G,uDACE,IAAD,OACP,OACE,yBAAKxC,UAAU,cACZyC,KAAKC,MAAM6E,WAAWjE,KAAI,SAACkE,GAAD,OACzB,uBACEhE,IAAKgE,EAASpH,KACdqD,QAAS,kBAAM,EAAKf,MAAM+E,aAAaD,EAASpH,OAChDJ,UACE,EAAK0C,MAAMgF,gBAAgBtH,OAASoH,EAASpH,KACzC,gDACA,yCAENuH,MAAO,CAAEC,OAAQ,YAEhBJ,EAASpH,c,GAhBEsD,aCoKTmE,E,4MA1JbrF,MAAQ,CACN2E,OAAQ,GACRxE,SAAU,EACVG,YAAa,EACbgF,OAAQ,GACRC,aAAc,GACdzD,WAAY,CAAED,KAAM,QAASE,MAAO,OACpCgB,YAAa,I,EAYfL,a,uCAAe,WAAO8C,GAAP,iBAAAtG,EAAA,6DACPuG,EAAkB,EAAKzF,MAAM2E,OADtB,SAKLe,EAAc,EAAK1F,MAAM2E,OAAOgB,QACpC,SAACjG,GAAD,OAAWA,EAAMC,MAAQ6F,KAE3B,EAAKI,SAAS,CAAEjB,OAAQe,IARb,SASLG,EAAcxG,YAAYmG,GATrB,uDAWP,KAAM/G,UAAsC,MAA1B,KAAMA,SAASG,QACnCkH,EAAW7H,IAAI,uCAEjB,EAAK2H,SAAS,CAAEjB,OAAQc,IAdb,yD,wDAkBfhE,QAAU,SAACsE,GACTA,EAAOrE,OAASqE,EAAOrE,MACvB,IAAMiD,EAAS,EAAK3E,MAAM2E,OAAO7D,KAAI,SAACpB,GAAD,OACnCA,EAAMC,MAAQoG,EAAOpG,IAAMoG,EAASrG,KAEtC,EAAKkG,SAAS,CAAEjB,Y,EAGlBqB,eAAiB,SAACjF,GAChBkF,QAAQhI,IAAI,sBAAuB8C,GAEnC,EAAK6E,SAAS,CAAEtF,YAAaS,K,EAG/BmF,iBAAmB,SAACC,GAClB,IAAMZ,EAAe,EAAKvF,MAAMsF,OAAOc,MACrC,SAACpB,GAAD,OAAcA,EAASpH,OAASuI,KAElCF,QAAQhI,IAAIsH,GACZ,EAAKK,SAAS,CAAEL,aAAcA,EAAcjF,YAAa,K,EAG3D+F,WAAa,SAACvE,GACZ,EAAK8D,SAAS,CAAE9D,gB,EAGlBoB,aAAe,SAACH,GAEd,EAAK6C,SAAS,CAAE7C,cAAawC,aADR,M,EAIvBe,QAAU,WACR,GAAI,EAAKtG,MAAM+C,YAAa,CAC1B,IAAIwD,EAAkB,YAAO,EAAKvG,MAAM2E,QACxC4B,EAAqBA,EAAmBZ,QACtC,SAACjG,GAAD,OACiE,IAA/DA,EAAM4E,MAAMrB,cAAcuD,QAAQ,EAAKxG,MAAM+C,gBAEjD,IAAM6B,EAAkBzD,EACtBoF,EACA,EAAKvG,MAAMM,YACX,EAAKN,MAAMG,UASb,MAAO,CAAEsG,cANa9F,IAAE+F,QACtB9B,EACA,CAAC,EAAK5E,MAAM8B,WAAWD,MACvB,CAAC,EAAK7B,MAAM8B,WAAWC,QAGDwE,sBAE1B,IAAMA,EAAsB,EAAKvG,MAAMuF,aAEF,eAAjC,EAAKvF,MAAMuF,aAAa3H,KACxB,EAAKoC,MAAM2E,OACX,EAAK3E,MAAM2E,OAAOgB,QAChB,SAACjG,GAAD,OAAWA,EAAMiH,MAAM/I,OAAS,EAAKoC,MAAMuF,aAAa3H,QAJ1D,EAAKoC,MAAM2E,OAOTC,EAAkBzD,EACtBoF,EACA,EAAKvG,MAAMM,YACX,EAAKN,MAAMG,UAQb,MAAO,CAAEsG,cALa9F,IAAE+F,QACtB9B,EACA,CAAC,EAAK5E,MAAM8B,WAAWD,MACvB,CAAC,EAAK7B,MAAM8B,WAAWC,QAEDwE,uB,oMAjGHzG,I,cAAfwF,E,gBACeO,EAAc5G,Y,OAA7B0F,E,OACN1E,KAAK2F,SAAS,CACZjB,OAAQA,EACRW,OAAO,CAAE,CAAE1H,KAAM,eAAX,mBAA8B0H,M,qIAgG9B,IACA/H,EAAS0C,KAAKC,MAAd3C,KADD,EAEuC0C,KAAKqG,UAA3CG,EAFD,EAECA,cAAeF,EAFhB,EAEgBA,mBACvB,OACE,kBAAC,IAAM5I,SAAP,KACE,yBAAKH,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACEuH,WAAY9E,KAAKD,MAAMsF,OACvBJ,gBAAiBjF,KAAKD,MAAMuF,aAC5BN,aAAchF,KAAKiG,oBAGvB,yBAAK1I,UAAU,OACZD,GACC,kBAAC,IAAD,CAAMC,UAAU,sBAAsBC,GAAG,sBAAzC,aAKF,kBAAC,EAAD,CACEkH,OAAQ4B,EACR3B,gBAAiB6B,EACjBhF,QAASxB,KAAKwB,QACdiB,aAAczC,KAAKyC,aACnBP,OAAQlC,KAAKoG,WACbvE,WAAY7B,KAAKD,MAAM8B,WACvBoB,aAAcjD,KAAKiD,aACnBH,YAAa9C,KAAKD,MAAM+C,cAE1B,kBAAC,EAAD,CACE1C,WAAYJ,KAAK+F,eACjB7F,SAAUF,KAAKD,MAAMG,SACrBG,YAAaL,KAAKD,MAAMM,YACxBF,aAAcmG,EAAmB1B,gB,GAlJtB3D,aCLV0F,EAJC,WACd,OAAO,wCCGMC,EAJG,WAChB,OAAO,+CCGMC,EAJE,WACf,OAAO,+C,QCoBMC,EArBD,SAAC,GAA4D,IAAD,IAAzD5D,YAAyD,MAAlD,OAAkD,EAA1CvF,EAA0C,EAA1CA,KAAMsE,EAAoC,EAApCA,MAAOX,EAA6B,EAA7BA,MAAO8B,EAAsB,EAAtBA,SAAU1E,EAAY,EAAZA,MAC5D,OACE,yBAAKnB,UAAU,cACb,2BAAOwJ,QAASpJ,GAAOsE,GACvB,2BACEmB,SAAUA,EACV9B,MAAOA,EACP7D,GAAIE,EACJJ,UAAU,eACV2F,KAAMA,EACNC,YAAW,gBAAWlB,KAEvBvD,EACC,yBAAKwG,MAAO,CAAE8B,SAAU,SAAWzJ,UAAU,sBAC1CmB,GAED,O,iBCOKuI,EAvBA,SAAC,GAAgD,IAA9CtJ,EAA6C,EAA7CA,KAAMsE,EAAuC,EAAvCA,MAAOmB,EAAgC,EAAhCA,SAAU8D,EAAsB,EAAtBA,QAAShD,EAAa,EAAbA,OAChD,OACE,yBAAK3G,UAAU,cACb,2BAAOwJ,QAASpJ,GAAhB,IAAwBsE,EAAxB,KACA,4BACEmB,SAAUA,EACV7F,UAAU,eACVI,KAAMA,EACNF,GAAIE,GAEHuJ,EAAQrG,KAAI,SAACsG,GAAD,OACX,4BAAQ7F,MAAO6F,EAAOzH,KAAMyH,EAAOxJ,UAGtCuG,EACC,yBAAKgB,MAAO,CAAE8B,SAAU,SAAWzJ,UAAU,sBAC1C2G,GAED,OCuEKkD,E,4MArFbrH,MAAQ,CAAEZ,KAAM,GAAI+E,OAAQ,I,EAE5BmD,SAAW,WACT,IACMC,EAASC,IAAIF,SAAS,EAAKtH,MAAMZ,KAAM,EAAKqI,OADlC,CAAEC,YAAY,IAE9B,GAAIH,EAAO5I,MAAO,CAChB,IADgB,EACVwF,EAAS,GADC,cAEEoD,EAAO5I,MAAMgJ,SAFf,IAEhB,2BAAwC,CAAC,IAAhChJ,EAA+B,QACtCwF,EAAOxF,EAAMkD,KAAK,IAAMlD,EAAMT,SAHhB,8BAKhB,OAAOiG,EAEP,OAAO,M,EAIXyD,cAAgB,SAAC/E,GACf,IAAIgF,EAAe,GACbN,EAASC,IAAIF,SAASzE,EAAEG,OAAOzB,MAAO,EAAKkG,OAAO5E,EAAEG,OAAOtF,KAIjE,OAHI6J,EAAO5I,QACTkJ,EAAeN,EAAO5I,MAAMgJ,QAAQ,GAAGzJ,SAElC2J,G,EAGTC,aAAe,SAACjF,GAGd,GAFAA,EAAEC,iBAEE,EAAKwE,WAAY,CACnB,IAAInD,EACJA,EAAS,EAAKmD,WACd,EAAK1B,SAAS,CAAEzB,WAElB,EAAK4D,Y,EAGPnF,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAI1D,EAAI,eAAQ,EAAKY,MAAMZ,MAC3BA,EAAKyD,EAAEG,OAAOtF,IAAMmF,EAAEG,OAAOzB,MAC7B,IAAI4C,EAAM,eAAQ,EAAKnE,MAAMmE,QACvB0D,EAAe,EAAKD,cAAc/E,GACxCoD,QAAQhI,IAAI4J,GACZ1D,EAAOtB,EAAEG,OAAOtF,IAAMmK,EACtB,EAAKjC,SAAS,CAAExG,OAAM+E,Y,EA4BxB6D,aAAe,SAACpK,EAAMsE,EAAOiF,GAC3B,OACE,kBAAC,EAAD,CACEvJ,KAAMA,EACNsE,MAAOA,EACPiF,QAASA,EACT9D,SAAU,EAAKT,aACfuB,OAAQ,EAAKnE,MAAMmE,OAAOvG,M,6DA/BA,IAAnBsE,EAAkB,uDAAV,SACnB,OACE,4BACE+F,SAAUhI,KAAKqH,WACfnE,KAAK,SACL3F,UAAU,mBAET0E,K,oCAIkC,IAA7BiB,EAA4B,uDAArB,OAAQvF,EAAa,uCAAPsE,EAAO,uCACtC,OACE,kBAAC,EAAD,CACEiB,KAAMA,EACNvF,KAAMA,EACNsE,MAAOA,EACPX,MAAOtB,KAAKD,MAAMZ,KAAKxB,GACvByF,SAAUpD,KAAK2C,aACfjE,MAAOsB,KAAKD,MAAMmE,OAAOvG,S,GApEdsD,aCuEJgH,E,4MArEblI,MAAQ,CACNZ,KAAM,CACJO,IAAK,GACL2E,MAAO,GACP6D,QAAS,GACTC,gBAAiB,GACjBC,cAAe,IAEjBlE,OAAQ,CAAEmE,UAAW,GAAI3B,MAAO,GAAI4B,OAAQ,GAAIC,MAAO,IACvDlD,OAAQ,I,EAGVmC,OAAS,CACP9H,IAAK6H,IAAIiB,SAASC,MAAM,GAAI,MAC5BpE,MAAOkD,IAAIiB,SAASE,IAAI,GAAGC,WAC3BT,QAASX,IAAIiB,SAASG,WACtBR,gBAAiBZ,IAAIqB,SAASF,IAAI,GAAGG,IAAI,KAAKF,WAC9CP,cAAeb,IAAIqB,SAASF,IAAI,GAAGG,IAAI,KAAKF,Y,EAG9Cb,S,sBAAW,sBAAA7I,EAAA,sEACH2G,EAAcpG,UAAU,EAAKO,MAAMZ,MADhC,OAET,EAAKc,MAAM6I,QAAQrE,KAAK,WAFf,2C,EAKXsE,c,sBAAgB,4BAAA9J,EAAA,sEACOY,IADP,OACRwF,EADQ,OAEd,EAAKM,SAAS,CAAEN,WAFF,2C,EAIhB2D,c,sBAAgB,gCAAA/J,EAAA,yDACRsG,EAAU,EAAKtF,MAAMgJ,MAAMC,OAAOzL,GAD1B,iEAKMmI,EAAcrG,SAASgG,GAL7B,OAKR9F,EALQ,QAMRN,EAAO,IACRO,IAAMD,EAAMC,IACjBP,EAAKkF,MAAQ5E,EAAM4E,MACnBlF,EAAK+I,QAAUzI,EAAMiH,MAAMhH,IAC3BP,EAAKgJ,gBAAkB1I,EAAM0I,gBAC7BhJ,EAAKiJ,cAAgB3I,EAAM2I,cAC3B,EAAKzC,SAAS,CAAExG,SAZF,4C,EAehBgK,kB,sBAAoB,sBAAAlK,EAAA,sDAClB,EAAK8J,gBACL,EAAKC,gBAFa,2C,uDAMlB,OACE,6BACGhJ,KAAKC,MAAMgJ,MAAMC,OAAOzL,GACvB,8CAAoBuC,KAAKC,MAAMgJ,MAAMC,OAAOzL,IAE5C,yCAEF,0BAAM2L,SAAUpJ,KAAK6H,cAClB7H,KAAKqJ,YAAY,OAAQ,QAAS,cAClCrJ,KAAK+H,aAAa,UAAW,QAAS/H,KAAKD,MAAMsF,QACjDrF,KAAKqJ,YAAY,SAAU,kBAAmB,UAC9CrJ,KAAKqJ,YAAY,SAAU,gBAAiB,SAC5CrJ,KAAKsJ,aAAa,c,GA/DLlC,GCkDTmC,G,4MAhDbxJ,MAAQ,CACNZ,KAAM,CACJqK,SAAU,GACVlG,SAAU,IAEZY,OAAQ,CACNZ,SAAU,GACVkG,SAAU,K,EAIdhC,OAAS,CACPgC,SAAUjC,IAAIiB,SAASK,IAAI,IAAIH,IAAI,GAAGC,WAAW1G,MAAM,YACvDqB,SAAUiE,IAAIiB,SAASG,WAAW1G,MAAM,a,EAG1C6F,S,sBAAW,oCAAA7I,EAAA,wEAEwB,EAAKc,MAAMZ,KAAlCqK,EAFD,EAECA,SAAUlG,EAFX,EAEWA,SAFX,SAGDiB,EAAKR,MAAMyF,EAAUlG,GAHpB,OAIDmG,EAAO,EAAKxJ,MAAMyJ,SAAS3J,MACjC4J,OAAOD,SAAWD,GAAc,IALzB,gDAOH,KAAIjL,UAAoC,MAAxB,KAAIA,SAASG,UACzBuF,EAAS,EAAKnE,MAAMmE,QACnBsF,SAAW,KAAIhL,SAASW,KAC/B,EAAKwG,SAAS,CAAEzB,WAChBtF,IAAMF,MAAM,KAAIF,SAASW,OAXpB,yD,uDAiBT,OAAIoF,EAAKP,iBAAyB,kBAAC,IAAD,CAAUxG,GAAG,KAAb,KAEhC,yBAAKD,UAAU,QACb,0CAEA,0BAAM6L,SAAUpJ,KAAK6H,cAClB7H,KAAKqJ,YAAY,OAAQ,WAAY,YACrCrJ,KAAKqJ,YAAY,WAAY,WAAY,YAC1C,yBAAK9L,UAAU,aAAayC,KAAKsJ,sB,GA1CnBlC,GCHjB,SAAewC,GAAtB,mC,8CAAO,WAAwBzK,GAAxB,eAAAF,EAAA,6DACC3B,EAAO,IACR+F,MAAQlE,EAAKqK,SAClBlM,EAAKK,KAAOwB,EAAKxB,KACjBL,EAAKgG,SAAWnE,EAAKmE,SAJhB,SAKQnF,IAAMyB,KAAN,SAAqBtC,GAL7B,oF,sBAFPa,IAAMC,SAASC,QAAUC,wC,ICyDVuL,G,4MAnDb9J,MAAQ,CACNZ,KAAM,CACJqK,SAAU,GACVlG,SAAU,GACV3F,KAAM,IAERuG,OAAQ,CACNsF,SAAU,GACVlG,SAAU,GACV3F,KAAM,K,EAIV6J,OAAS,CACPgC,SAAUjC,IAAIiB,SAASnF,QAAQsF,WAAW1G,MAAM,YAChDqB,SAAUiE,IAAIiB,SAASE,IAAI,GAAGC,WAAW1G,MAAM,YAC/CtE,KAAM4J,IAAIiB,SAASG,WAAW1G,MAAM,S,EAGtC6F,S,sBAAW,gCAAA7I,EAAA,+EAEgB2K,GAAS,EAAK7J,MAAMZ,MAFpC,OAEDX,EAFC,OAGD+E,EAAM/E,EAASkF,QAAQ,gBAC7Ba,EAAKJ,aAAaZ,GAClBoG,OAAOD,SAAW,IAClB9K,YAAM,QAAD,OAASJ,EAASW,KAAKxB,KAAvB,yBANE,kDAQH,KAAIa,UAAoC,MAAxB,KAAIA,SAASG,UACzBuF,EADyC,eAC3B,EAAKnE,MAAMmE,SACxBsF,SAAW,qBAClB,EAAK7D,SAAS,CAAEzB,WAChBtF,IAAMF,MAAM,uBAZP,0D,uDAkBT,OACE,yBAAKnB,UAAU,aACb,6CACA,0BAAM6L,SAAUpJ,KAAK6H,aAActK,UAAU,IAC1CyC,KAAKqJ,YAAY,WAAY,WAAY,YACzCrJ,KAAKqJ,YAAY,WAAY,WAAY,YACzCrJ,KAAKqJ,YAAY,OAAQ,OAAQ,QACjCrJ,KAAKsJ,aAAa,kB,GA7CFlC,G,SCqBZ0C,G,uKAvBH,IAAD,EACiD9J,KAAKC,MAArD2B,EADD,EACCA,KAAiBmI,EADlB,EACOC,UAAsBC,EAD7B,EAC6BA,OAAWC,EADxC,8CAED5M,EAAOiH,EAAKP,iBAClB,OACE,kBAAC,IAAD,eACEpC,KAAMA,GACFsI,EAFN,CAGED,OAAQ,SAAChK,GACP,OAAI3C,EACK2D,YAAY,kBAAC8I,EAAc9J,GAAYgK,EAAOhK,GAGnD,kBAAC,IAAD,CACEzC,GAAI,CAAE2M,SAAU,SAAUpK,MAAOE,EAAMyJ,SAASS,oB,GAdnClJ,aCSdmJ,G,kLARX7F,EAAKV,SACL8F,OAAOD,SAAW,M,+BAGlB,OAAO,S,GANUzI,aCyDNoJ,I,kNA3CbtK,MAAQ,CACNzC,KAAM,M,kEAIN,IAAMA,EAAOiH,EAAKP,iBAClBhE,KAAK2F,SAAS,CAAErI,W,+BAGR,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,0BAAMA,UAAU,QACd,kBAAC,EAAD,CAAQD,KAAM0C,KAAKD,MAAMzC,OACzB,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqE,KAAK,aAAaoI,UAAWpD,IACpC,kBAAC,IAAD,CAAOhF,KAAK,WAAWoI,UAAWrD,IAClC,kBAAC,IAAD,CAAO/E,KAAK,SAASoI,UAAWT,KAChC,kBAAC,IAAD,CAAO3H,KAAK,UAAUoI,UAAWI,KACjC,kBAAC,IAAD,CAAOxI,KAAK,YAAYoI,UAAWH,KACnC,kBAAC,GAAD,CACEjI,KAAK,0BACLoI,UAAW/B,IAEb,kBAAC,IAAD,CAAUwB,KAAK,UAAUjM,GAAG,MAC5B,kBAAC,IAAD,CAAOoE,KAAK,aAAaoI,UAAWnD,IACpC,kBAAC,IAAD,CACEjF,KAAK,IACL0I,OAAK,EACLL,OAAQ,SAAChK,GAAD,OACN,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuB3C,KAAM,EAAKyC,MAAMzC,WAG5C,kBAAC,IAAD,CAAUE,GAAG,uB,GAnCTyD,cCJEsJ,QACW,cAA7BZ,OAAOD,SAASc,UAEe,UAA7Bb,OAAOD,SAASc,UAEhBb,OAAOD,SAASc,SAASvB,MACvB,2D,kBCNNpK,EAAOjB,OAEP6M,IAASR,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMS,WAAP,KACE,kBAAC,IAAD,MACA,kBAAC,GAAD,QAGJC,SAASC,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzM,GACLsH,QAAQtH,MAAMA,EAAMT,c","file":"static/js/main.82f39d6f.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        Moviely\r\n      </NavLink>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link \" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link \" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link \" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import Raven from \"raven-js\";\r\n\r\nfunction init() {\r\n  Raven.config(\r\n    \"https://aa55084a51744acba27b1ba75a235aa0@o431757.ingest.sentry.io/5383721\"\r\n  ).install();\r\n}\r\n\r\nfunction log(message) {\r\n  Raven.captureException(message);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 % error.response.status < 500;\r\n  if (!expectedError) {\r\n    toast.error(\"an unexpected error occured\");\r\n    logger.log(error);\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst getMovies = async () => {\r\n  const { data } = await axios.get(`/movies/`);\r\n  return data;\r\n};\r\n\r\nconst deleteMovie = async (movieID) => {\r\n  const { data } = await axios.delete(`/movies/${movieID}`);\r\n  return data;\r\n};\r\n\r\nconst getMovie = async (movieID) => {\r\n  const { data } = await axios.get(`/movies/${movieID}`);\r\n  return data;\r\n};\r\n\r\nconst saveMovie = async (data) => {\r\n  let movie = { ...data };\r\n  delete movie._id;\r\n  if (data._id) {\r\n    await axios.put(`/movies/${data._id}`, movie);\r\n  } else {\r\n    await axios.post(`/movies/`, movie);\r\n  }\r\n};\r\n\r\nexport default { getMovies, deleteMovie, getMovie, saveMovie };\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nasync function getGenres() {\r\n  const { data } = await axios.get(`/genres`);\r\n  return data;\r\n}\r\nexport default getGenres;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Pagination extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { pageSize, totalItemNum, onPaginate, currentPage } = this.props;\r\n    const numPages = Math.ceil(totalItemNum / pageSize);\r\n    if (numPages === 1) {\r\n      return null;\r\n    }\r\n    const pages = _.range(1, numPages + 1);\r\n    return (\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          {pages.map((page) => (\r\n            <li\r\n              key={page}\r\n              className={\r\n                currentPage === page ? \"page-item active\" : \"page-item\"\r\n              }\r\n            >\r\n              <a onClick={() => onPaginate(page)} className=\"page-link\">\r\n                {page}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pageSize: propTypes.number.isRequired,\r\n  totalItemNum: propTypes.number.isRequired,\r\n  onPaginate: propTypes.func.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nconst paginate = (items, page, pageSize) => {\r\n  let paginatedItems = _(items)\r\n    .slice((page - 1) * pageSize)\r\n    .take(pageSize)\r\n    .value();\r\n  return paginatedItems;\r\n};\r\n\r\nexport default paginate;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Like extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"like-container\" onClick={this.props.onLiked}>\r\n        <i className={this.props.liked ? \"fa fa-heart\" : \"fa fa-heart-o\"}></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHead extends Component {\r\n  renderSortIcon = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      return sortColumn.order === \"asc\" ? (\r\n        <i className=\"fa fa-sort-asc\"></i>\r\n      ) : (\r\n        <i className=\"fa fa-sort-desc\"></i>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) =>\r\n            column.label ? (\r\n              <th\r\n                key={column.path}\r\n                className=\"clickable\"\r\n                onClick={() => this.props.onSort(column.path)}\r\n                scope=\"col\"\r\n              >\r\n                {column.label} {this.renderSortIcon(column.path)}\r\n              </th>\r\n            ) : (\r\n              <th key={column.key}></th>\r\n            )\r\n          )}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHead;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  render() {\r\n    return (\r\n      <tbody>\r\n        {this.props.items.map((item) => (\r\n          <tr key={item._id}>\r\n            {this.props.columns.map((column) =>\r\n              column.content ? (\r\n                <td>{column.content(item)}</td>\r\n              ) : (\r\n                <td key={_.get(item, column.path)}>\r\n                  {_.get(item, column.path)}\r\n                </td>\r\n              )\r\n            )}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHead from \"./tableHead\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    return (\r\n      <table className=\"table  table-hover\">\r\n        <TableHead\r\n          sortColumn={this.props.sortColumn}\r\n          columns={this.props.columns}\r\n          onSort={this.props.onSort}\r\n        />\r\n        <TableBody\r\n          items={this.props.items}\r\n          columns={this.props.columns}\r\n          onLiked={this.props.onLiked}\r\n          onDelete={this.props.handleDelete}\r\n        />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SeacrForm extends Component {\r\n  state = {};\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    let searchQuery = \"\";\r\n    searchQuery = e.target.value.toLowerCase();\r\n    this.props.handleSearch(searchQuery);\r\n  };\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <div className=\"form-group mt-3\">\r\n        <input\r\n          name=\"search\"\r\n          id=\"search\"\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"Search . . . .\"\r\n          value={value}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SeacrForm;\r\n","import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst tokenKey = \"token\";\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(tokenKey);\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await axios.post(`/auth`, {\r\n    email,\r\n    password,\r\n  });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJWT(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(tokenKey);\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    const user = jwtDecode(jwt);\r\n    return user;\r\n  } catch (errors) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default {\r\n  logout,\r\n  login,\r\n  getCurrentUser,\r\n  loginWithJWT,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SeacrForm from \"./common/searchForm\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (item) => (\r\n        <Link to={`/movies/movie-form/${item._id}`}> {item.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rating\" },\r\n\r\n    {\r\n      key: \"like\",\r\n      content: (item) => (\r\n        <Like onLiked={() => this.props.onLiked(item)} liked={item.liked} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (item) => (\r\n      <button\r\n        onClick={() => this.props.handleDelete(item._id)}\r\n        className=\"btn btn-danger\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  onSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movies,\r\n      paginatedMovies,\r\n      onLiked,\r\n      handleDelete,\r\n      sortColumn,\r\n      handleSearch,\r\n      searchQuery,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"list\">\r\n        {movies.length !== 0 ? (\r\n          <React.Fragment>\r\n            <p>showing {movies.length} movies in database</p>\r\n            <SeacrForm value={searchQuery} handleSearch={handleSearch} />\r\n            <Table\r\n              items={paginatedMovies}\r\n              columns={this.columns}\r\n              sortColumn={sortColumn}\r\n              onSort={this.onSort}\r\n              onLiked={onLiked}\r\n              handleDelete={handleDelete}\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <p>You are yet to add any movies</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListGroup extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"list-group\">\r\n        {this.props.categories.map((category) => (\r\n          <a\r\n            key={category.name}\r\n            onClick={() => this.props.onCategorize(category.name)}\r\n            className={\r\n              this.props.currentCategory.name === category.name\r\n                ? \"list-group-item list-group-item-action active\"\r\n                : \"list-group-item list-group-item-action\"\r\n            }\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {category.name}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListGroup;\r\n","import moviesService from \"../services/movieService\";\r\nimport getGenres from \"../services/genreService\";\r\nimport logService from \"../services/logService\";\r\nimport React, { Component } from \"react\";\r\nimport Pagination from \"./common/pagination\";\r\nimport _ from \"lodash\";\r\nimport paginate from \"../utils/paginate\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ListMovies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    genres: [],\r\n    currentGenre: \"\",\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const genres = await getGenres();\r\n    const movies = await moviesService.getMovies();\r\n    this.setState({\r\n      movies: movies,\r\n      genres: [{ name: \"All Genres\" }, ...genres],\r\n    });\r\n  }\r\n\r\n  handleDelete = async (movieId) => {\r\n    const original_movies = this.state.movies;\r\n\r\n    // delete from backend\r\n    try {\r\n      const movies_left = this.state.movies.filter(\r\n        (movie) => movie._id !== movieId\r\n      );\r\n      this.setState({ movies: movies_left });\r\n      await moviesService.deleteMovie(movieId);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        logService.log(\"this movie has already been deleted\");\r\n      }\r\n      this.setState({ movies: original_movies });\r\n    }\r\n  };\r\n\r\n  onLiked = (movie1) => {\r\n    movie1.liked = !movie1.liked;\r\n    const movies = this.state.movies.map((movie) =>\r\n      movie._id === movie1._id ? movie1 : movie\r\n    );\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePaginate = (page) => {\r\n    console.log(\"handling pagination\", page);\r\n\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleCategorize = (category_name) => {\r\n    const currentGenre = this.state.genres.find(\r\n      (category) => category.name === category_name\r\n    );\r\n    console.log(currentGenre);\r\n    this.setState({ currentGenre: currentGenre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = (searchQuery) => {\r\n    const currentGenre = \"\";\r\n    this.setState({ searchQuery, currentGenre });\r\n  };\r\n\r\n  getData = () => {\r\n    if (this.state.searchQuery) {\r\n      let categorized_movies = [...this.state.movies];\r\n      categorized_movies = categorized_movies.filter(\r\n        (movie) =>\r\n          movie.title.toLowerCase().indexOf(this.state.searchQuery) !== -1\r\n      );\r\n      const paginatedMovies = paginate(\r\n        categorized_movies,\r\n        this.state.currentPage,\r\n        this.state.pageSize\r\n      );\r\n\r\n      const sorted_movies = _.orderBy(\r\n        paginatedMovies,\r\n        [this.state.sortColumn.path],\r\n        [this.state.sortColumn.order]\r\n      );\r\n\r\n      return { sorted_movies, categorized_movies };\r\n    }\r\n    const categorized_movies = !this.state.currentGenre\r\n      ? this.state.movies\r\n      : this.state.currentGenre.name === \"All Genres\"\r\n      ? this.state.movies\r\n      : this.state.movies.filter(\r\n          (movie) => movie.genre.name === this.state.currentGenre.name\r\n        );\r\n\r\n    const paginatedMovies = paginate(\r\n      categorized_movies,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n\r\n    const sorted_movies = _.orderBy(\r\n      paginatedMovies,\r\n      [this.state.sortColumn.path],\r\n      [this.state.sortColumn.order]\r\n    );\r\n    return { sorted_movies, categorized_movies };\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const { sorted_movies, categorized_movies } = this.getData();\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\" col-4\">\r\n            <ListGroup\r\n              categories={this.state.genres}\r\n              currentCategory={this.state.currentGenre}\r\n              onCategorize={this.handleCategorize}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {user && (\r\n              <Link className=\"btn btn-primary m-2\" to=\"/movies/movie-form\">\r\n                New Movie\r\n              </Link>\r\n            )}\r\n\r\n            <MoviesTable\r\n              movies={categorized_movies}\r\n              paginatedMovies={sorted_movies}\r\n              onLiked={this.onLiked}\r\n              handleDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n              sortColumn={this.state.sortColumn}\r\n              handleSearch={this.handleSearch}\r\n              searchQuery={this.state.searchQuery}\r\n            />\r\n            <Pagination\r\n              onPaginate={this.handlePaginate}\r\n              pageSize={this.state.pageSize}\r\n              currentPage={this.state.currentPage}\r\n              totalItemNum={categorized_movies.length}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListMovies;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Our coustomers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Page not found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ type = \"text\", name, label, value, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        value={value}\r\n        id={name}\r\n        className=\"form-control\"\r\n        type={type}\r\n        placeholder={`Enter ${label}`}\r\n      />\r\n      {error ? (\r\n        <div style={{ fontSize: \"0.8em\" }} className=\"alert alert-danger\">\r\n          {error}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, onChange, options, errors }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}> {label} </label>\r\n      <select\r\n        onChange={onChange}\r\n        className=\"form-control\"\r\n        name={name}\r\n        id={name}\r\n      >\r\n        {options.map((option) => (\r\n          <option value={option._id}>{option.name}</option>\r\n        ))}\r\n      </select>\r\n      {errors ? (\r\n        <div style={{ fontSize: \"0.8em\" }} className=\"alert alert-danger\">\r\n          {errors}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Joi from \"joi-browser\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const result = Joi.validate(this.state.data, this.schema, options);\r\n    if (result.error) {\r\n      const errors = {};\r\n      for (let error of result.error.details) {\r\n        errors[error.path[0]] = error.message;\r\n      }\r\n      return errors;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  validateInput = (e) => {\r\n    let errorMessage = \"\";\r\n    const result = Joi.validate(e.target.value, this.schema[e.target.id]);\r\n    if (result.error) {\r\n      errorMessage = result.error.details[0].message;\r\n    }\r\n    return errorMessage;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.validate()) {\r\n      let errors = {};\r\n      errors = this.validate();\r\n      this.setState({ errors });\r\n    }\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    let data = { ...this.state.data };\r\n    data[e.target.id] = e.target.value;\r\n    let errors = { ...this.state.errors };\r\n    const errorMessage = this.validateInput(e);\r\n    console.log(errorMessage);\r\n    errors[e.target.id] = errorMessage;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  //   Helper functions\r\n  renderButton(label = \"submit\") {\r\n    return (\r\n      <button\r\n        disabled={this.validate()}\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n  renderInput(type = \"text\", name, label) {\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={this.state.data[name]}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect = (name, label, options) => {\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        errors={this.state.errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport getGenres from \"../services/genreService\";\r\nimport moviesService from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      title: \"\",\r\n      genreId: \"\",\r\n      dailyRentalRate: \"\",\r\n      numberInStock: \"\",\r\n    },\r\n    errors: { movieName: \"\", genre: \"\", rating: \"\", stock: \"\" },\r\n    genres: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string().allow(\"\", null),\r\n    title: Joi.string().min(5).required(),\r\n    genreId: Joi.string().required(),\r\n    dailyRentalRate: Joi.number().min(1).max(100).required(),\r\n    numberInStock: Joi.number().min(1).max(100).required(),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await moviesService.saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  populateGenre = async () => {\r\n    const genres = await getGenres();\r\n    this.setState({ genres });\r\n  };\r\n  populateMovie = async () => {\r\n    const movieId = this.props.match.params.id;\r\n    if (!movieId) {\r\n      return;\r\n    }\r\n    const movie = await moviesService.getMovie(movieId);\r\n    const data = {};\r\n    data._id = movie._id;\r\n    data.title = movie.title;\r\n    data.genreId = movie.genre._id;\r\n    data.dailyRentalRate = movie.dailyRentalRate;\r\n    data.numberInStock = movie.numberInStock;\r\n    this.setState({ data });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.populateGenre();\r\n    this.populateMovie();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.match.params.id ? (\r\n          <h1>Movie form for {this.props.match.params.id}</h1>\r\n        ) : (\r\n          <h1>New movie</h1>\r\n        )}\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"text\", \"title\", \"Movie Name\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"number\", \"dailyRentalRate\", \"Rating\")}\r\n          {this.renderInput(\"number\", \"numberInStock\", \"Stock\")}\r\n          {this.renderButton(\"save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import { toast } from \"react-toastify\";\r\nimport Joi from \"joi-browser\";\r\nimport React from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport Form from \"./common/form\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {\r\n      password: \"\",\r\n      username: \"\",\r\n    },\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().max(20).min(3).required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { username, password } = this.state.data;\r\n      await auth.login(username, password);\r\n      const from = this.props.location.state;\r\n      window.location = from ? from : \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        const errors = this.state.errors;\r\n        errors.username = err.response.data;\r\n        this.setState({ errors });\r\n        toast.error(err.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\"> </Redirect>;\r\n    return (\r\n      <div className=\"main\">\r\n        <h1>Login Page</h1>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"text\", \"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"password\", \"Password\")}\r\n          <div className=\"formgroup\">{this.renderButton()}</div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nexport async function register(data) {\r\n  const user = {};\r\n  user.email = data.username;\r\n  user.name = data.name;\r\n  user.password = data.password;\r\n  return await axios.post(`/users`, user);\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi, { errors } from \"joi-browser\";\r\nimport { register } from \"../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      const jwt = response.headers[\"x-auth-token\"];\r\n      auth.loginWithJWT(jwt);\r\n      window.location = \"/\";\r\n      toast(`user ${response.data.name} created sucessfully`);\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = \"user already exist\";\r\n        this.setState({ errors });\r\n        toast.error(\"user already exist\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register Form</h1>\r\n        <form onSubmit={this.handleSubmit} className=\"\">\r\n          {this.renderInput(\"username\", \"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"password\", \"Password\")}\r\n          {this.renderInput(\"text\", \"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nclass ProtectedRoute extends Component {\r\n  render() {\r\n    const { path, component: Conponent, render, ...rest } = this.props;\r\n    const user = auth.getCurrentUser();\r\n    return (\r\n      <Route\r\n        path={path}\r\n        {...rest}\r\n        render={(props) => {\r\n          if (user) {\r\n            return Component ? <Conponent {...props} /> : render(props);\r\n          } else {\r\n            return (\r\n              <Redirect\r\n                to={{ pathname: \"/login\", state: props.location.pathname }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navBar\";\nimport ListMovies from \"./components/movieList\";\nimport Rentals from \"./components/rentals\";\nimport Customers from \"./components/customers\";\nimport NotFound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport Logout from \"./components/logout\";\nimport auth from \"./services/authService\";\nimport \"./App.css\";\n\n// for moive rental app\nclass App extends Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main className=\"main\">\n          <NavBar user={this.state.user}></NavBar>\n          <div className=\"container mt-5\">\n            <Switch>\n              <Route path=\"/customers\" component={Customers} />\n              <Route path=\"/rentals\" component={Rentals} />\n              <Route path=\"/login\" component={LoginForm} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/register\" component={RegisterForm} />\n              <ProtectedRoute\n                path=\"/movies/movie-form/:id?\"\n                component={MovieForm}\n              />\n              <Redirect from=\"/movies\" to=\"/\" />\n              <Route path=\"/not-found\" component={NotFound} />\n              <Route\n                path=\"/\"\n                exact\n                render={(props) => (\n                  <ListMovies {...props} user={this.state.user}></ListMovies>\n                )}\n              />\n              <Redirect to=\"/not-found\" />\n            </Switch>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport logger from \"./services/logService\";\n\nlogger.init();\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <ToastContainer />\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}